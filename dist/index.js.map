{"version":3,"sources":["../src/index.js"],"names":["styles","pagination","borderTop","display","alignItems","justifyContent","elements","height","marginLeft","label","color","fontWeight","fontSize","Pagination","props","nextPage","changePage","previousPage","direction","state","currentPage","pageCount","Math","max","min","setState","onChange","limit","count","calculatePageCount","total","nextProps","ceil","to","_from","showing","replace","String","Component","propTypes","func","isRequired","number"],"mappings":"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","file":"index.js","sourcesContent":["import React, { PropTypes } from 'react'\nimport IconButton from 'material-ui/IconButton'\nimport ChevronLeft from 'material-ui/svg-icons/navigation/chevron-left'\nimport ChevronRight from 'material-ui/svg-icons/navigation/chevron-right'\n\nconst styles = {\n  pagination: {\n    borderTop: '1px solid rgb(224, 224, 224)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end'\n  },\n  elements: {\n    display: 'flex',\n    alignItems: 'center',\n    height: 56,\n    marginLeft: 16\n  },\n  label: {\n    color: '#999',\n    fontWeight: 300,\n    fontSize: 12\n  }\n}\n\nexport default class Pagination extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      currentPage: 1,\n      count: 0\n    }\n  }\n\n  static propTypes = {\n    onChange: PropTypes.func.isRequired,\n    total: PropTypes.number.isRequired,\n    limit: PropTypes.number.isRequired\n  }\n\n  componentDidMount () {\n    this.calculatePageCount(this.props.total)\n  }\n\n  componentWillReceiveProps (nextProps) {\n    this.calculatePageCount(nextProps.total)\n  }\n\n  calculatePageCount (total) {\n    const { limit } = this.props\n\n    this.setState({\n      pageCount: Math.ceil(total / limit)\n    })\n  }\n\n  nextPage = () => this.changePage(1)\n\n  previousPage = () => this.changePage(-1)\n\n  changePage = (direction) => {\n    const { currentPage, pageCount } = this.state\n\n    let nextPage = currentPage + direction\n\n    nextPage = Math.max(nextPage, 0)\n    nextPage = Math.min(nextPage, pageCount)\n\n    this.setState({ currentPage: nextPage })\n    this.onChange(nextPage)\n  }\n\n  onChange = (nextPage) => this.props.onChange(nextPage, this.props.limit)\n\n  render () {\n    let { total, limit } = this.props\n    let { currentPage, pageCount } = this.state\n\n    if (!total) return <div/>\n    // if (total < limit) return <div/>\n\n    let to = currentPage * limit\n    let _from = to - limit + 1\n\n    to = Math.min(to, total)\n\n    let showing = 'Showing {from} to {to} of {total}'\n      .replace('{total}', String(total))\n      .replace('{from}', String(_from))\n      .replace('{to}', String(to))\n\n    return (\n      <div style={styles.pagination}>\n        <div style={styles.elements}>\n          <div style={styles.label}>{showing}</div>\n          <IconButton\n            disabled={currentPage === 1}\n            onTouchTap={this.previousPage}>\n            <ChevronLeft/>\n          </IconButton>\n          <IconButton\n            disabled={currentPage === pageCount}\n            onTouchTap={this.nextPage}>\n            <ChevronRight/>\n          </IconButton>\n        </div>\n      </div>\n    )\n  }\n}\n"]}